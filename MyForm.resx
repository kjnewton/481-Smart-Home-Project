<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAUYAAACwCAYAAABza8dAAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAGgVJREFUeF7tnemTVUWaxucPmA8T0TER82E+TExMR49ja9vqdI/70q7Y7tq20trY
        rbbauNAu2AKBDcq+r8UiRbEUxVYF1L6zCIiACgrYgNDKLouKiCu+U09y85L3vXmWe+tWFXXr+UVkUNyT
        55zMNzOf8+Zy8vyTEEIISYHCSAghCgojIYQoKIyEEKKgMBJCiILCSAghCgojIYQoKIyEEKKgMBJCiILC
        SAghCgojIYQoKIyEEKKgMBJCiILCSAghCgojIYQoKIyEEKKgMBJCiILCSAghCgojIYQoKIyEEKKgMBJC
        iILCSAghCgojIYQoKIyEEKKgMBJCiILCSAghCgojIYQoKIyEEKKgMBJCiILCSAghCgojIYQoKIyEEKKg
        MBJCiILCSAghCgojIYQoKIyEEKKgMBJCiILCSAghCgojIYQoKIyEEKKgMBJCiILCSAghCgojIYQoKIyE
        EKKgMBJCiILCSAghCgojIYQoKIyEEKKgMBJCiILCSAghCgojIYQoKIyEEKKgMBJCiILCSAghCgojIYQo
        KIyEEKKgMBJCiILCSAghCgojIYQoKIyEEKKgMBJCiILCSAghCgojIYQoKIyEEKKgMBJCiILCSAghCgoj
        IYQoKIyEEKKgMBJCiILCSAghCgojIYQoKIyEEKKgMOYZM0rWyUuDKuT4ia8Tv5C25O339sqTf10o23Ye
        SvxC8gEKY55Q1bRV/rfbKBlTsFhKFlfJxTcPl2nFaxNHSa45cOi4PPJ8iTzw5BQpXVYt9zwyUR7vvUAO
        Hf4iEYN0ZiiMnZxNW/fJTQ8UyIsD5khtQ5VUVpeZUFNXYUTyF7eMljUbdidik9by9TffybBJTXLVnaNk
        SUVt0t4IEEj8/srIGnrsnRwKYydlz/5P5eFe8+S3jxdITX1dSgN1Q019lTz41LSWMEf2HvgscTbJhrKa
        9+SSW0fKlKJyr61tmDmvWn7RbYQUzFot3313KnE26UxQGHNETfM2eW1sXavCu1v2Ja4WzLHPTkqfoZVy
        pfFY0gVx7ZsrZcPGtWm/L62slivvGCkDRtfKlye/TVyNxGHr9oNyc/cp0mfwPKmuTRXF2vpy2bJ1szQ1
        16T8Do999JQlcsH1w6W0alPiSuEUzl/nrReZBHblcwOFMUdUNW6U6bMrWhXWbdyWuJqfUVOXy89vGCqz
        5qc2QoSVbzTKkaOHEzHF/K0bK8K0lvtcdNNwmbN4QyImCeLwsRPydL9SufuPE6S6Lv0h9O7mjS0e4emH
        DP7dvmObEUo3Tl1jtbw0sFguv2Nc5JDGvNJmb73IJOzZd6YOkOyhMOYINAq3QWQTcA3NDz/8ICVL3zae
        x/jpy1o8kXSPZc/ejxKx09m1e2daY4XX029IiVx9zwQzq0pSQfd3QuEqM4G1oKw6xXYI8Mrdh5DLyZNf
        GsHU59Q3NZghjfufnCUffnQkETsVXFefl2kIShfJDApjjtDCCA8OFT0saI9OC+OqdR/KpbeNlb6D5xvP
        w40LsUN867GEgTi+xlrbUC/3PjZZHntxvnxyhF0w0Lx6h1x44wgZN7XUdIdT7BXxEHL5/Phnpozd8xEq
        ahrl+t+Mk179y+Tw0ROJ2KfR8d26EhT0Q4/CmBsojDlCC2OcCqrPscKINXF3PTJD/thrhjQ0N6bEQYDI
        wTPJlKDGumhpjelejyhoNrOuXZEduw8bm/d4ZnrLAyPdS4z7ENIEDWmUlNabCZohExvl5Fenr6vLJg76
        HApjbqAw5ohcCOM7mzbJEy8tlBvvHy9VdU0pxxDQCHJR8eH1pE8WlMuE6acnC5bWvp+Imf9gWU3v18rl
        6rtGSXl1uoDB5tk8hDS+IQ3YvKCoUs7/1TAz8UJhPHugMOaIXAhj4dxyWbCkIeU3BIjYwYP7E2flBjtZ
        oO+FtZBPvVxk1kZu23EwETv/OHXqB3l93pvGUy4sPrP+0wbYPNciE2Tz+sZq6TdssdQ11qf8HgcKY9tA
        YcwRuRBGHeBhwNNoS+AN+Zb3VNTUmMXKz/QrlSPHWu8xhYHJiFt7TJNzrhpsuvNtzer1u83C935DS7zL
        bzrK5jrEgcLYNlAYc0SuhRFr47IZ08oWpNc3FjZ7fpX87LrBMqnojUTM3IE1mS8MXGYWTVfX1Utjc72M
        n14hP79huCypeS8RK3d8tPeYdO852yyKr2tM98zd5TftAWyuhc0NcaAwtg0UxhyRK2GEJ5GLMa1s8Y+F
        VciAkQtbup0jzKxtLphctFrOu3aoFJXUtdwvdfa3eWWz9OpfbJYTbdy8J3FG9mBB+99G1ciFNw6T0mWp
        r/EhQFwwMdVR+MZ8EeJAYWwbKIw5orXCqBdodyTwmrzLe+przaYJ9z42U3Z9fDQROzOW1b1vBHbo+KXS
        0JQuBm5oXL5Sbn1okvToVWxegcwUrAGdt+Rt+Z+rh8jkwvQ1oBCjuMtv2gPUB/ehFAcKY9tAYcwR2Qrj
        2dY4XYKW9+BVxMtvHykvD6mMvVnC5q37jQcITxAeob4m7OATY4SyyuaW7vYo6TesKvb9sHAdb5s8139O
        2hpQBNi+PbvNcXEfSnGgMLYNFMYckY0wQnjOxsapwYy47urB+5pStEx+csUgmbngLeOd+dh/8HP5w1/m
        SbfuE6VxxaqUayDAQ3JFCsMIPjFGd7twXo3pfk+ds0a+/96/OQO2A3v0hflyzd2jva/xdfRQRVzippHC
        2DZQGHNENsLYmYBwIY96/BHe2It/K5b/u3VMyrvA8Oyw/RY8vbKKdA8RIWyhOuznG3dD93vwmDKz9yT2
        oLTY7cDOv26wFC9KPw/XykfRoDC2DRTGHJHvwmiBkPmWmsA7w6tuv3+2WKbMXiPnXjNEXp9bkzauh4DG
        HHeyA8MMWowRGpc3Sc+XZ0u3B6eaXct/2uJJDh7nf42vrZffdCQUxraBwpgjuoowWpA/TBi5eUYoKa2V
        YRNOL1rWx+C1ZbNQ3Xqr+noIdY3Lpd/QBVLXkD7b3N7LbzoCCmPbQGHMAVgOsmbd+i5ZQX3Le3TIldcG
        bzVogsYNmXiknR0tjGvXnxleINlDYWwliys3mXdd4bm4FbSrCOPBT47LCwPguaW+zmZDWyxUh221INhQ
        MLNSihauT8TMf7QdBoxYbJZTfbwv8+VN5AwUxiz5x55jZnzrL/2LpWl5qijAQ8p3j+Wrr7+TwRMazOYL
        SyrT3zVGg23r2V//Zhinv3Vz5V1jzbZt+Y7Pg66uX2HeJho+uanlocRPK2QDhTFDMPuJLeQvv3201Dak
        eokInWU5SLZgWU5x2UYz2zx7fnoXuiMWqvtmy7EZxrN9ZxrvCVuK5TNBy6nweiXeCV/11q5ETBIXCmMG
        LF+z02xiOm12VUtDTJ39zHZioTPx1rsfy2W3j5VRkxd5Z387cqE6uuve8cfaWvnNnybLcwOWytFP8/eB
        FTRB1bSiSbr3nG4+nKY3xiXBUBhjgEXK2HzgD70KvW9toELm8+wnhg0e+PMsebpPofnqoJt3COLZlP+g
        t3UWLa0y3f5xr6+Ub7/9PhE7/wjK/5KKRrn0tlHmy4XYco2EQ2EMAW9XjJm2wnSby2vSBbE9xtE6ks+/
        +Mps4orPH2AbMp3/sAXaHQ2687p7iVAwc5kpz7bYvedswrf+E4vj8Y46Ppfxzvt7EzGJDwpjAGs3/sO8
        zTF2annaIuV87zZjwB7bjMHDyvRjUGcbvuVE2IPx1dHz5br7JuX1x8DgxWNVgJt3hIbmBrnj4QLzBcRP
        Pz+ZiE1cKIwKbMqKj0NhXAZvV+hKle/d5oqGLXLFnWNk0oylaXnvrA8ElJdv/K26rlK6/3mqPPJ8iew9
        kL+rCIK619gtHt3r2fyUbhoUxgSYbZ1WvFYuux3v9qZvYoqKlc9LcLb8/YDxoPoGfFQewtLZQbff9zrj
        sqpq+fWD4+XVMXVmsX6+4vOe0b3G2keUfT5/yiJTKIwtvLdtv1x513gZMm5pWrcZFels3RYsFxw6/IU8
        3nuB/K7nVONBuXlHaO+dxNuDoAXi8xZVGQ9q1qL1gbsFdXZQlr7ZeyzQv+V3E81Wcvn8cIhLlxZGTC70
        emWJGW/BuIuuLPkoChZ8snPQ+Aaz8QM8Jp33fJ9YAkELxMdPK2vxoCbk9QJxPBz0u+5YgjZ3Ya1cfNNI
        KcvzyakourQwFpaskfllXa/bDBaWb2xpBOke4tm0k3h7YMcfdRcTC8QHjV0snxz5IhEzP/F1r7EBSP8R
        peYbOV2VLi2MqBRuhUAFycVmB50BvZwj34cMovB1MfGQyNcegwvyqMdeUR/yvccQRpcfY4R3hEqARtEV
        GoGLnYzI95n2TLAzuPkw2ZQpaAsYWkCd6Or1gZMvhBCioDASQoiCwkgIIQoKIyGEKCiMhBCioDASQoiC
        wkgIIQoKIyGEKCiMhBCioDASQoiCwkg6FYePnZCr75kg//zj3l3q+9Ekt2DnJNShc64aLNt2Hkr8eoZA
        YcRnQheUvyPX3jtR/uWcv5qL/PLXo2XIxEazh18Q2Nsw7tfYEG/7rvg7uezZ/6ms2bA78b9gkFFkGGl2
        w7nXDJGn+i6WXR8fTcQUs/ccvqCm4waFOI0RcRAX143a287GRWNHo+9q4IP9+IzCDfdPlh+d28fY4t8v
        ekXuf3KW1DRvM/XQhcKYOfhUBYTgiZcWmjYA2yGgPQ8aV28+dtbVyEoYvzjxjTz6wvykAXW44PrhsnW7
        f7ffYZOaZGH5u4n/hYN4iB+XqXPWmK/VIX1hBAmjDf95ycDkXnsUxo4Bgjd2+oqkGAYFCKb7XZYwYUSZ
        /vjy12Tg6Fr5Jo+/BJgJaKewobarG1AGaIfYo7OrkJUwjp62PHlSdRN2XjllQvPqHUnB6T+i2nxFz+XE
        l9/IQ8/Mldt6TI/0Gj87/pX89omiWOIB8AnTK+4cZ7zXuhUfJH71Y4XRzTQaCj5wddXd4036wwQ2ymhR
        UBjDcR+8aJR9h1aZngPqGEBZ4f/4HcddO8YRxqEtvRp7rbOJfsOqYteLXID2Cu/b1q/y+i3Jj19hh3K0
        Ufxm7WmdhfYGtoBNkAbYqD3IWBiPn/ha7nu8yJw0ceYbiV/P0PjGdhk/Y2VaFwfsaxGvS24bE0u8cBzx
        EB/nRQHvEmlCQJfAd3+LTxgtMAjuGyZ6FMa2A4KFb6sgz+h54CP+YWCz1AmFq5IeYJgwnu20pzDCU4R9
        cb8+QytDvUGUSXHZxg77pGqnEEa34s0oWZf4NR6r1+9OjkeGeWSuIRAf54WBJ1u3B6eauP96Xl/5twv6
        Ge8viDBhtMdw76AnJIWx7YAXg/KDJ4O/M4XCGI3bvuCZRw09dTSdQhjdRIaNJfqAkOI8BFT+oIoPUcNx
        G9fnmbqUVm0yoghxxPgRzsE3cYO8xjBhtPcOEz0KY9uA8oK3j/y+MHBZVt1dCmM0to7/12WvdooP63cK
        YQQYV7SeHyYqps5da8YPw0BXp2efxeYcK3q+Lq/bOGw8nBc0WG7HIhEPky9W9MIK3cZxM43r4++7Hy00
        1+osY4yYMcR4rp1NhKf14NNzZcOmPXLqVOqX7NwKhuti9cBLgypMGeK3y+8YJ/Ur/27Gl9C1en3em8nu
        FuKMnNLs7XIhPmyN+9oxK8THDD8+uxr3i3q7Pz4qF900wpyPOpYNQcIY1Ljc+ChXrEjo0avY5AN1HOPh
        dnIH428Yn7T2gm3mlmJn93QBRxcf9dbaA7bFKo5NW/eZemPvB2wZ66BFAGmDTe39bVm/8dautLIOAxMp
        OB9DYhgayxbcE/d2yx31EM4Jxvw1Plu7+cG/OBffbrfYh4UOtmzd9rFx8x7p3nN2Upvc8s80rVkJI25S
        svTt5A0Q8DeW6vgaLzh89IRZ2oO4+PIeEg/h011eNDCIGuL9qfcCEw+TKkEfHbJjkRffPEo+/OiIqaRo
        7Dgf//oqrRVGm3YdcOzNt4O74rkSxkyCFkaITWXj1mSl0gE2gWC6QuaKw4uvLktONLkB5YiP6getOtCe
        HP4eM21FsjLqgMkRiEccccR4YpS3HkVrhBFjm756AQFE7+amBwrSjiFMLlqdkj93/E6HWx6aKv/xywHm
        77jCiGtjDN1tb26A7fFFR19d17gOihbeTEC9Qv0KKnfUS9RP1y5xbI3gdu/jCiOu5dZn2B96ALJJa1bC
        aIHiW28t7Cbg3S37TIU479qhZq0hur2I73Z5XVGDGDas2m4ShsbiG4SH8eDZIT6e5PaeWCsJcUXA3xqf
        MMJoeKpHrcMEZ4MwIg22oTzTYkOs4UT+YZOZC95KHnMbjCsOCPhGMDxu+zR1bfL7Z4uTT1J4pVYU9GSY
        HcbA/XBfW6HddMTtsrXWrqA1woh8QOTQkGAz5M32WhCsvWBn1Gcrfq7n5fZg0FDXvfORsS+uBy/YtbEV
        RosVAaQT6bXgGrAj0jd4QkNyRQdEDm0N18SxOF52kB0yAXlBvcI13HKHXVAPUR/tMTeP2ta4v80L7IaH
        Lo7p9h6WZrctoc6i7cLeqLtIZ7ZpjaqLocIIcAN0l6x3h4vhX/1R8tLqzebYrT2mmS6JbVBuo3EFCxUU
        RkN8/B+zYho7UO8+HQCMYY3sCqbF3gdhxdqdSZGO+9RtbQO2hakbgA8b1xVGFKx9IPgGz5Ff2N/a1z4c
        3Ap2z2OFyaUZwPUk8ABDw3eB/XHMzbObDu01AdjSPugGtHRZouhoj7FX/7KU8od9bP3zrY5AnnDMLRub
        BwTfBKC7eiKOMLo2DBp3xRASjqMufPV18GoMkAuP0ToevnYOUC9sj8MdknJt7RtGs84Tjru2iSOMQfbO
        Nq2tFkYLboiL4UK4IDw+63HgGJ62+P25AUtN4bpPVtvlhYi55+I3xHfPs7hjkWFBiyZwhRF/2ycyQpyZ
        0I4WRqzhg+eN34PS6w5d2IdKWAUDvoZu8eXZTUdUiJPXjh5jdOMDiIxtNL70+8rG/nbdfZOS3pCLrXuI
        4zZ+4BNGXAPXwu9RwVduPlo7xmgfkmFDXMgbxAj1w7695trat6LFLufDcdc2YfXW2jtoWV+2afXVd5fY
        wmixEzOu1+E+eV2D2LgQL4wVYpwQcdwKajNuPU2LFTMciwojCppTnhS2ctpM4xjiIC7S8sHOTxIx/UQZ
        LQqbpzhiYeO6lV6n34dbmabMXpP2m08Yw9Lly7NNB36PCnHy6j7sgsaHowgSuqC8B8W3WLEKs5dbNmE2
        BO793MYP7L3cc934UcFNRxjurLRvqCmKqDwCWzfce0TZOsg2QWUHfGXgkm1aMxZG9N9rl3/g7ToBexMY
        3o4TWM/C/Q24XTHrKei3YmzX5CdXDEouDUKDsV3lsAZkJ2YuvW2sGU+w2DS6mXY9WF/31KWjhbGtPMaw
        dIUJoy7X1mDLLK73DtzyD2p8QXmPaqxWrMLs5ZaN/S3IY0QdRl1GnEyFEcNRucBtd1F13YK2jrYPcuEx
        +mztHndtE1ZvfWXg0m4eI94ywAlabCx4hQjHXdcWnqH+zWLHCXEcidNdKNe9thXDHTfQlcsFFbNbYvwQ
        4zAW26B1pt0Zce1lukQZLQpbmD4B0vgK3vWsfBUb6Y4aYwxr6L50+fLs9gR8Y7n4P2akMaa1Y/fhQHu6
        IG+YkMM14b2HeTS4HpYlYZMJS1DjC8p7VGO1YhVmL7ds7EsMqNN6zAvphUOBcxB03bX3cu3vjgn6xuUA
        2hBetfUt0QrC7XFhCMV3XQuW4qHd254UhqZQNshntmOMPlu7x13bhNVbXxm4ZJvWqDaeJoyueEB08H87
        64aZTSQCx2Bs+yS3YxooPL3e0W3k8Njgubm44zyYcsc17WA07u97KrvYe9/4QIHZqQUECaNbccM8lo4W
        RuBW7GxmpcMaui9dQXkOmpVGuaAx2U0gMKt94NBp+0eBdWyYYcR5OB952Hvgs2SjR9ogOnbCz81LUOML
        yntUY7ViFWYvt2yQb/R68Ls7K42ZbrdcEOIII7Bljby6s9KwNSZz7JIttL24L1ygrsCJsenBRhKo7/a+
        SDNsXjh/nZz/q2Ep5Y5z7dCTW+74Pe6stM/W7nH3vKCyA74ycMk2rUH13ZImjLggvABb4X0Bldou0nQz
        BZHygYLHy/1BQuQOFm98b69JLP7veoFBWO8S8VGJADKKa/gyDaPZRmnXRmqijBaFLUyfAGmCCh7lgPfS
        s13HGNbQfekKyjNEN2wdIwIeYJhYyQSkG+UeVs8Q0KBdMQhqfEF5j2qsVqzC7KXLBrYKKhcMGdkektsQ
        gb2Xtj/KOmwdIwLqKjzGTMHi9Ti762CnI9erxN/Ykiyo3H3L9qJs7R53bRNWb4PKwCWbtEa1ce/kCy6A
        JTruqnUYD09K3MA1oNsVDpppRONaXLkp5TwXCCbO/+8rB8nzA0/PUrtdxDAgdHY8xXqYYcIIkDccwzm+
        rmqU0aKwhekTIE1UwWPdFlbv6zdf4Mm7BQ3CKhgIS1dYnnEf3A+ev64PaNCuOGdK0H6Mtz+cXtdAUOML
        yntUY7ViFWYvX9lgjS+6wFbMsLfh7MUbvG++WOy9guoFrtn7tfJkWaOhYxwZk2u6p5UJaH9IC8rPXhvh
        whtHmIdr0H6Mttx9b5P41gJH2do97tomrN6GlYFLpmmNauNeYSSEkK4MhZEQQhQURkIIUVAYCSFEQWEk
        hBAFhZEQQhQURkIIUVAYCSFEQWEkhBAFhZEQQhQURkIIUVAYCSFEQWEkhBAFhZEQQhQURkIIUVAYCSFE
        QWEkhBAFhZEQQhQURkIIUVAYCSFEQWEkhBAFhZEQQhQURkIIUVAYCSFEQWEkhBAFhZEQQhQURkIIUVAY
        CSFEQWEkhBAFhZEQQhQURkIIUVAYCSFEQWEkhBAFhZEQQhQURkIIUVAYCSFEQWEkhBAFhZEQQhQURkII
        UVAYCSFEQWEkhJAURP4fgbLPDVC6ONsAAAAASUVORK5CYII=
</value>
  </data>
</root>